
% DCE demo script - 2015-08-18
% (CC BY 4.0) czaj.org

clear all
clc

global B_backup; % this is for storing B in case iterations are interrupted with ctrl-c


%% ****************************  loading & specifying data ****************************


EstimOpt.DataFile = ('NEWFOREX_DCE_demo.mat');
DATA = load(EstimOpt.DataFile);


%% ****************************  loading & specifying input ****************************


INPUT.Y = DATA.Y;
INPUT.Xa = DATA.X;
% INPUT.MissingInd = DATA.SKIP;

EstimOpt.NamesA = {'SQ';'GOS'; 'CEN'; 'VIS1'; 'VIS2';'FEE' }; % Specyfy names of the attributes


%% ****************************  sample characteristics ****************************


EstimOpt.NCT = 12; % Number of choice tasks per person 
EstimOpt.NAlt = 3; % Number of alternatives
EstimOpt.NP = length(INPUT.Y)/EstimOpt.NCT/EstimOpt.NAlt; % 789; % Number of respondents


%% **************************** estimation and optimization options ****************************

% EstimOpt.eps = 1.e-12; % overall precision level

[INPUT, Results, EstimOpt, OptimOpt] = DataCleanDCE(INPUT,EstimOpt);

% EstimOpt.NRep = 1e3; % number of draws for numerical simulation
% OptimOpt.MaxIter = 1e3; % maximum number of iterations
% OptimOpt.Algorithm = 'quasi-newton'; % 'trust-region'
% EstimOpt.NumGrad = 0; % 1
% OptimOpt.GradObj = 'on'; % 'off'
% OptimOpt.FinDiffType = 'central'; % 'forward'
% OptimOpt.Hessian = 'user-supplied'; % 'off'
EstimOpt.HessEstFix = 1; % 0 = use optimization Hessian, 1 = use jacobian-based (BHHH) Hessian, 2 - use high-precision jacobian-based (BHHH) Hessian 3 - use numerical Hessian


%% ****************************     MNL     ****************************


% INPUT.Xs = [DATA.Income_1, DATA.Sex, DATA.Edu_dummy(:, 2:4), DATA.Hhadult, DATA.Age_dummy(:,2:4)];  % Covariates of scale
% INPUT.Xs = INPUT.Xs;
% EstimOpt.NamesS = {'Income'; 'Sex'; 'Edu2'; 'Edu3'; 'Edu4'; 'HHadult'; 'Age2'; 'Age3';'Age4'};

% EstimOpt.WTP_space = 1; % number of cost parameters for WTP-space estimation (need to come last in Xa)

%Results.MNL.b0 = [0.159957022105421;0.486589496218975;0.609086367407496;0.0682084933928573;0.188272959734389;0.0142472931131374];

Results.MNL = MNL(INPUT,Results,EstimOpt,OptimOpt);

%saveasexcel('sciezkapliku','nazwapliku', tablica)
saveasexcel('C:\Users\Buczu\Documents\MATLAB\','MNL.xls', Results.MNL.R_out) %this file is formatted in Matlab

xlswrite('MNL1.xls', Results.MNL.R_out); %this file is formatted in VBA 

%you can choose whether to format in VBA or Matlab



%% ****************************     MXL     ****************************
clc

% EstimOpt.Dist = zeros(size(INPUT.Xa,2)+1,1); % 0 - normal, -1 - constant, 1 - lognormal, 2 - Spike, 3 - triangular, 4 - Weibull, 5 - sinh-arcsinh, 6 - Johnson Sb, 7 - Johnson Su; the first one is for the scale parameter (include even for MXL)
% EstimOpt.NLTVariables = [6]; % for sixth variable to be transformed with non-linear transformation
% EstimOpt.NLTType = 1; % 1 - use Box-Cox transformation, 2 - use Yeo-Johnson transformation

DATA.Xm = [DATA.Q10, DATA.Q14]; % covariates of random parameters means
INPUT.Xm = DATA.Xm;
EstimOpt.NamesM = {'BF should be protected'; 'Visits limitation'};

EstimOpt.Scores = 1; % Predict individual-specific paramter / WTP scores using bayes rule
 
Results.MXL_d.b0 = [-3.55076938804236;0.866868314367487;1.45867921102248;0.684325536475621;1.56239321606758;0.0203222567705629;1.69082501811971;0.940419893472289;0.946987051824926;0.000880267263521202;0.704898564561587;0.160025009904792;-0.0292850354327927;0.0816454461842625;-0.260330045218203;0.0905328035568683;-0.223184571973596;-0.00541336680903266;1.26014117672378;-0.169611675636731;-0.162249549205927;-0.344526955311047;-0.560437097456512;0.00773729922291472];

Results.MXL_d = MXL(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('MXL_d.xls', Results.MXL_d.R_out)


%% ****************************     MXL     ****************************


EstimOpt.FullCov = 1; % Specify if random parametrs are correlated or not (default)

Results.MXL.b0 = [-3.67841639122779;1.02919439174027;1.69053895318787;0.755726865911505;1.67243590266565;0.0262068347317378;2.74823377913414;-0.464748595396772;-0.342003845072046;-0.211184983179976;-0.287654672305689;-0.0109299720774473;0.882861969566034;0.362908971988116;-0.245116823505179;-0.0993270831468055;0.000566667224964407;0.938898085416145;0.0809830910424329;0.154931349877451;0.00242478655465148;-0.367767102664467;-0.597517888631567;0.0162399891266730;0.0898406729109649;0.0200340255187641;0.00424788593743359;0.134365617298685;0.0561150820568650;-0.282191463484518;0.0982868291602833;-0.203625035117273;-0.00867391886400750;1.16065042343329;-0.272801289511031;-0.267398408227525;-0.427498247273963;-0.693539057870490;0.00681571001412804];

Results.MXL = MXL(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('MXL.xls', Results.MXL.R_out)


%% ****************************     GMXL     ****************************


EstimOpt.FullCov = 0;

% EstimOpt.Dist(1) = 5; 
 
DATA.Xt = [DATA.Q26T]; % Covariates of scale variance
INPUT.Xt = DATA.Xt;
EstimOpt.NamesT = {'Sure'};

Results.GMXL_d.b0 = [-5.50466394916762;1.24573344406003;2.04006390675628;0.916091359267958;2.16848060278937;0.0254640951575686;2.02252027125277;1.03037998111340;1.02893962113661;0.579377525246619;0.769586171673115;0.186151397833613;0.525882015265026;0.149352054989099;-0.404087073962245;0.219817325025609;-0.192879462588862;-0.00168940906423778;1.58554619652613;-0.254062762528525;-0.178141743607360;-0.510139325258131;-0.849525979341377;0.0102771284421518;-0.0832207213861379;1.96855182644823;0];

Results.GMXL_d = GMXL(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('GMXL_d.xls', Results.GMXL_d.R_out)


%% ****************************     GMXL     ****************************


EstimOpt.FullCov = 1;

Results.GMXL.b0 = [-4.97231572686362;1.31262856411438;2.26932213325212;0.921278979022505;2.12062425714000;0.0271259022615436;3.50428793997685;-0.582226894043491;-0.236122848110063;-0.359794401001511;-0.403510665616776;-0.00842860897189976;1.09726039941856;0.485085436727607;-0.379323593525927;-0.226178752733404;-3.87023253363163e-05;1.12956735152755;0.200657160110708;0.240875917374358;-0.000159705275203637;-0.281242336401371;-0.656100155500200;0.0186442117305362;0.00269240025377506;0.0299128787706293;0.00267080785782920;0.124512177429160;0.0178794077113454;-0.508584278286773;0.233110650123340;-0.188987014879156;-0.00746602163181001;1.57802887754787;-0.302688726979661;-0.255624068330508;-0.593098004476025;-0.948241014937091;0.0120875898199787;-0.0781804432392860;1.29527744652482;0];

Results.GMXL = GMXL(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('GMXL.xls', Results.GMXL.R_out)


%% ****************************     LC     ****************************


EstimOpt.NClass = 2; % no of classes

DATA.Xc = [DATA.Income_1, DATA.Sex, DATA.Edu_dummy(:, 2:4), DATA.Hhadult, DATA.Age_dummy(:,2:4)]; % Covariates of class probabilities (constant is added automatically)
INPUT.Xc = DATA.Xc;
EstimOpt.NamesC = {'Income'; 'Sex'; 'Edu2'; 'Edu3'; 'Edu4'; 'HHadult';  'Age2'; 'Age3';'Age4'};

% EstimOpt.WTP_space = 0;

EstimOpt.ClassScores = 1; % Predict individual-specific class membership probabilities using bayes rule

EstimOpt.BActiveClass = ones(EstimOpt.NVarA,1); % use 0 to impose coefficient equality for all latent classes
EstimOpt.BActiveClass(1) = 0;

Results.LC.b0 = [-0.844653112091913;0.615883335776026;0.774946734454666;0.269507748851202;0.359727107340635;0.0135196137298638;-0.844653112091913;-0.138852469649109;0.238926297391342;-1.04764557533077;-0.826472951576170;0.0549698052480266;-0.0876113211180419;0.227991720249515;-0.331551962617751;-0.0807431862939583;0.0618710810709223;0.343084350035940;-0.00795274174406242;0.353856109280794;-0.0447902102134332;-0.227011580646783];

Results.LC = LC(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('LC.xls', Results.LC.R_out)


%% ****************************     LCMXL     ****************************


EstimOpt.FullCov = 0;

EstimOpt.Scores = 1; % Predict individual-specific paramters / probabilities using Bayes rule

Results.LCMXL_d.b0 = [-3.74694882496672;1.30705619839851;1.92556845598622;0.613376258759601;0.966860029459674;0.0433737002758462;0.513270450276485;0.281762229474891;0.332428620410349;-0.162429395766505;-0.110073595946459;0.0246226215453973;1.30316048191751;1.11171295477448;1.12837184404352;-0.282443008675831;0.881842026182410;0.185504157175637;1.52026789751759;0.694341863413004;9.69476022807201e-08;0.606060359788228;0.691122636147833;0.144623749857368;-0.577253576712155;0.168752746543154;-0.208456885167876;-1.00321511307566;-0.00920132136525448;0.341196308962431;-0.167874029648949;0.298255921496178;-0.248070566902198;0.147902911129409];

Results.LCMXL_d = LCMXL(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('LCMXL_d.xls', Results.LCMXL_d.R_out)


%% ****************************     LCMXL     ****************************


EstimOpt.FullCov = 1;

Results.LCMXL.b0 = [-4.15650817188773;1.34725844576944;2.44656412250964;0.528692975880760;0.600439121007073;0.0526614622688878;0.209564410649901;0.290490849693725;0.466358659999564;-0.176231848456203;-0.178525299089649;0.0241836580828095;2.41872694372692;-0.176389387506743;0.670010175356734;-0.453818949320096;-0.569198070308796;-0.00917050711957451;1.68190682053910;0.602049122439933;-0.286284664975373;-0.200262572790746;-0.00927882053904144;1.00559582848997;0.703278423829243;1.11411967584597;-0.0172383538409688;-0.106103693329128;0.0317502238869243;-0.0282019976628477;0.250302942031082;-0.00510058551987472;0.00515862798217444;2.28835438329312;-0.379952112138723;0.0718625883117136;-0.112808922251560;-0.363700974483610;0.00434395986299072;0.578102736578476;0.392881032940088;-0.223138873730086;0.0279763511419442;0.00881726225369402;-0.274167218641366;0.405826920701559;0.127019977394616;-0.00913876536358146;0.273730198871094;0.567882833090877;-0.00632621048549467;-0.212228649668084;0.0126821368487240;-0.00826214824683525;-0.418977901054910;0.238019958149105;-0.360713084407273;-1.17086723385678;-0.261402050560964;0.108107205413021;-0.237672222605672;0.312746826127212;-0.530761419101633;0.0184406508884885];

Results.LCMXL = LCMXL(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('LCMXL.xls', Results.LCMXL.R_out)


%% ****************************     MIMIC     ****************************

DATA.Q6a(DATA.Q6 == 0) = 0;
DATA.Q18(DATA.Q18 == 5) = 6; DATA.Q18(DATA.Q18 == 4) = 5; DATA.Q18(DATA.Q18 == 6) = 4;

INPUT.Xstr = [DATA.Income_1, DATA.Sex, DATA.Edu_dummy(:, 2:4), DATA.Hhadult, DATA.Age_dummy(:,2:4)]; % Structural equations variables
INPUT.Xstr = INPUT.Xstr;
EstimOpt.StrNorm = ones(1,9); % standarize mean and variance of explanatory variables in INPUT.Xstr
EstimOpt.NamesStr = {'Income'; 'Sex'; 'Edu2'; 'Edu3'; 'Edu4'; 'HHadult'; 'Age2'; 'Age3';'Age4'};

INPUT.Xmea =[DATA.Q10, DATA.Q11, DATA.Q12, DATA.Q14, DATA.Q15, DATA.Q26T, DATA.Q6a, DATA.Q18]; % Measurment equations variables
INPUT.Xmea = INPUT.Xmea;
% INPUT.Xmea_exp - additional covariates explaining mesurment equations
EstimOpt.NamesMea = {'BF should be protected'; 'Current protection is correct';'BF should be...';'Visits limitation';'Ready to bear costs'; 'Sure of choices'; 'No. of trips to BF taken'; 'Planning to visit BF in the future'};

EstimOpt.NLatent = 3; % Number of latent variables
% 1 LV - pro ecological attitude
% 2 LV - sure of choices (bearing costs)
% 3 LV - user/potential user

EstimOpt.MeaMatrix = [1 1 1 1 1 0 0 0 ; ...
                      0 0 0 0 1 1 0 0 ;
                      0 0 0 1 0 0 1 1]; % Matrix which indicates which attitudes are for which latent variable
EstimOpt.MeaSpecMatrix = [2 2 1 2 2 0 5 2]; % Specify measurement equation types - 0 = OLS, 1 = MNL, 2 = ordered probit, 3 = Poisson, 4 = Negative Binomial, 5 = Zero Inflated Poisson


Results.MIMIC.b0 = [0.148804376036183;-0.0364082689222229;-0.011064187742934;-0.0328575964505152;0.0424262689999236;0.00273733107195817;0.000235868427034212;-0.0768321543374594;-0.0720384450063044;-0.182575092847832;-0.0889680242634086;0.0379016122905587;-0.0244595986981180;-0.102660615070606;0.0539610288365757;0.0199342038767283;0.0718078258319252;0.0584470737842732;-0.201257402822855;0.0764346466677323;-0.163835971369101;-0.459578451640330;-0.547742335961172;-0.0378517363338953;0.131870616625717;0.157282552503199;0.223384083050719;-0.646448862649465;1.76638999126690;0.170229689466746;-0.467601747733821;-0.385812150452167;0.0639992488021068;0.354924420649614;-0.884183959319061;-0.456373780888765;-1.72488330525692;-0.819176767599829;-3.53925172461022;-0.614934148806317;-1.02462552933921;-0.124463517158109;-0.817505342443083;0.353472442572121;-1.44476685199243;0.294421923674619;-0.783669894549255;0.422497373690311;-2.23158336924593;0.576352808306931;-0.615136705928837;0.288301309162005;5.64281169897769;-2.24959315348704;0.292532147431253;-5.80848898507390;-2.28905990132861;-1.51817407957309;-1.95292496115563;0.668875562745533;-1.14733027425654;-0.158305917441182;0.371733658905934;-0.00971089741677728];
Results.MIMIC = MIMIC(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('MIMIC.xls', Results.MIMIC.R_out)
%% ****************************     HMNL     ****************************


Results.HMNL.b0 = [-1.14094600960236;0.411390148070317;0.609017179904672;-0.0263030332900600;0.00421733360474226;0.0285199855912793;-1.53453912967091;0.144452931674057;0.328541670756680;0.423987449051065;0.579407446259859;-0.0185761288148176;1.94382156826493;-0.728841308356307;-0.457177909920331;0.0539196846964948;-0.0560681943014945;-0.0134611042731105;-0.555691113041402;0.307568977207957;0.408267646703255;0.137846780402913;0.220372056974186;0.00558926355101684;0.122093449302567;-0.0621610130909112;0.0272561719516274;0.0608764295723298;0.143620821762320;0.00546917035766017;-0.0404702659759664;-0.0849736152818371;-0.0683967158213834;-0.182850937540312;-0.00762136379022452;-0.0654002051657539;-0.279510364960866;-0.366519235708021;0.0659329009898559;-0.0120414321284538;0.100708198333323;0.0238924944808446;-0.202938603363164;0.0993432020347775;-0.133713747362219;-0.364691146863731;-0.461872064060969;-0.0668057160784178;0.179144470715141;0.154468870032317;0.226698992469999;-0.266836145380067;1.53811300564280;0.0318545536968127;-0.668741088433211;-0.240570913918238;0.0569279747294012;0.314337638605250;-0.914847999700343;-0.463682355020966;-1.60665720826820;-0.512080860890437;-3.52161011681424;-0.507015128617441;-0.764230000049655;-0.103254500330289;-0.734047302957046;0.221607625821588;-1.54307755495665;0.186803424349212;-0.766201777034644;0.418284533601053;-2.15730068832683;0.508003582614332;-0.621739331700712;0.315116145508611;5.63853056084625;-0.956591040388352;0.888976822921340;-6.32595103751222;-2.36967909687317;-1.54246313174784;-1.93308390425346;0.587121369024861;-1.11070998185684;-0.188045600940949;0.335445667150098;-0.0563739346478828];
Results.HMNL = HMNL(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('HMNL.xls', Results.HMNL.R_out)

%% ****************************     HLC     ****************************


EstimOpt.NClass = 2;

INPUT.Xc = []; % Covariates of class probabilities (constant is added automatically)
EstimOpt.NamesC = {};

Results.HLC.b0 = [1.20197313116354;0.278210679879918;0.530059091419007;-0.182685980649373;-0.305537533724282;0.0270703091061663;-1.41655999573528;0.557507248553981;0.735856832192613;0.147300150922581;0.327873361448359;0.0172523890699557;-1.03668647494237;-2.54929197745789;2.00188173849808;-0.463566602280444;0.0891261546289021;-0.0699894285428627;-0.0865668476747637;-0.146654339028461;-0.0610565789327525;0.0142268996671567;0.00907647644874161;-0.0506020517421298;-0.0392585169662136;-0.293884854176353;-0.0550859821680844;-0.0621915327828027;-0.188502833936924;-0.204671303724005;0.0283838627672646;-0.0527779061794841;0.0648246862144353;0.0774593315158619;-0.189154378011671;0.0694239598540365;-0.163295667135698;-0.395072027084742;-0.473114385012745;-0.0357144902187619;0.140708670429299;0.164463169027262;0.225121565371154;-0.513082411191174;1.66919116886506;0.111212015012612;-0.564745898041805;-0.317313269846011;0.0601557508738113;0.334132764276556;-0.897728654282980;-0.459044597151843;-1.70432624669686;-0.784903254848445;-3.57685060025883;-0.700573254917617;-1.25580130415804;-0.126945831924853;-0.925821867451835;0.462524472541745;-1.30901557517353;0.423165674766422;-0.942006775689421;1.00926566657588;-2.84444066497614;0.815539150771800;-0.361571956903350;0.526459202495884;5.64411330876536;-1.25509156948698;0.830958580422238;-5.80363645421653;-2.33056559414439;-1.50565370263289;-1.94920119174762;0.667182857219099;-1.14592496865458;-0.157830706129451;0.369926406502240;-0.0108615860125244];
Results.HLC = HLC(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('HLC.xls', Results.HLC.R_out)


%% ****************************     HMXL     ****************************


EstimOpt.FullCov = 0;

INPUT.Xm = [];
EstimOpt.NamesM = {};
 
Results.HMXL_d.b0 = [-1.14141323982371;0.514843062060805;0.763649460602225;0.0346093501226855;0.0840649187785517;0.0296900138472253;1.22419972050396;0.918465723168385;0.909152703619760;0.532701576136002;0.460518803850993;0.141310459485277;-1.25627462227894;0.187201905565572;0.243586432259823;0.480918184653656;0.780185613493383;-0.00944930907008871;2.08130385559718;-0.416461368471674;-0.463505358251037;0.0333182470365262;-0.0216844482548339;-0.00692006017878489;-0.298787786345832;0.167495370661079;0.361656066183680;0.150385030323722;0.237400593695299;0.00725375624232438;0.0752094898660033;-0.0405446020404272;-0.0495324398146037;-0.0669024007560178;-0.0144888878563108;0.0175999019348812;0.00745578831682354;-0.0112994917219719;-0.00492681447481428;-0.222608650565944;-0.0264830455567419;-0.142702358778095;-0.307527500631389;-0.377744538806241;0.0735072044591212;-0.0845382776953023;0.0661789486644421;0.0331377098847531;-0.209848734902456;0.0447338684455241;-0.239901819941312;-0.399418952361410;-0.471707333110839;-0.0893669474341484;0.142016678605931;0.0965542323374146;0.189313684087863;-0.453153839966961;1.64539365287744;0.0830923586612726;-0.605439010460855;-0.283873192343670;0.0676186617665655;0.325200418387606;-0.903395063135472;-0.463049162706035;-1.65898395406635;-0.620762760077654;-3.63143320768143;-0.724679677306505;-1.34208117085586;-0.149275545529738;-0.933993590529222;0.499665271087694;-1.25273710318611;0.479741301862308;-0.757625901524292;0.736954468422626;-2.32005840764951;0.601350045418018;-0.523779047040877;0.401486245090135;5.66604007539241;-1.10872206961843;0.862050573460368;-5.36991509655222;-1.88573407442216;-1.42245290710758;-1.85687685279318;0.589606058478867;-1.09813828214566;-0.188889221065478;0.337314328327891;-0.0543504598817079];
Results.HMXL_d = HMXL(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('HMXL_d.xls', Results.HMXL_d.R_out)


%% ****************************     HMXL     ****************************


EstimOpt.FullCov = 1;
 
Results.HMXL.b0 = [-1.17866262710786;0.568861060789024;0.828587288121290;0.00272440819377101;0.0756771388842980;0.0297685995010993;1.83235316485474;-0.232949620258224;-0.125389409643658;-0.131156011303843;-0.126022882341937;-0.0142927649419020;0.896077129995184;0.320826143358428;-0.252106471907500;-0.0889913021746220;0.00561667775453003;0.876144373640958;-0.0248512560901143;0.0482385195538393;0.00220543195143888;0.272913100189826;0.231633442605258;-0.0120167095579841;0.164253542838176;-0.00431366083458448;0.0184195878197125;-1.18722782263512;0.227456682656732;0.266662951290985;0.436575860508963;0.773073435853787;-0.00811456752938825;1.77797043455565;-0.349100924406621;-0.344983352601105;-0.00346838069317485;0.0264643694499625;-0.00169489171326249;-0.0636692921819356;0.0976011249425863;0.234504790296446;0.116392500506549;0.161666840069181;0.00460813761756757;0.0354395006205420;0.000366562494455291;0.0261840470270328;0.0478110498738215;0.108871165126176;0.0125637611419398;0.000826826307191830;-0.0166816204242987;-0.0214356692175934;-0.218052534627836;-0.0211462502609388;-0.176876560789891;-0.329774890843068;-0.352931936428441;0.0671237144006608;-0.0749697027594113;0.0354208670126864;0.0538043252036271;-0.208704272390066;0.0370287878740556;-0.250136084703342;-0.401138182361720;-0.472740488885229;-0.0768980614132037;0.131661363831161;0.0889958450670485;0.174824351403850;-0.501651509238841;1.69173715479472;0.107779822030296;-0.569746509055972;-0.302832372222789;0.0765098027896466;0.331126744966086;-0.899120341173322;-0.461271306202320;-1.69466764325709;-0.667108597046926;-3.69700654017147;-0.806961208538379;-1.29583036005087;-0.129804009427931;-0.879184819970984;0.484331657326732;-1.28013670784576;0.451916957049697;-0.774607945892198;0.875683779073441;-2.43059275583615;0.664299065116452;-0.461528176819897;0.459241247890881;5.68594968157601;-1.09415997624279;0.866861566111552;-5.08848120788496;-1.82737878678046;-1.40351632399668;-1.85575324195977;0.645218113039979;-1.12202062077642;-0.168921989832270;0.359276988160762;-0.0257575520105287];
Results.HMXL = HMXL(INPUT,Results,EstimOpt,OptimOpt);

xlswrite('HMXL.xls', Results.HMXL.R_out)

